name: Java CI with Maven, Sonar scan, Docker Image Build, Push and Trivy Scan

on:
  push:
    branches: [ "github-actions" ]
  pull_request:
    branches: [ "github-actions" ]

jobs:
  build:
    runs-on: [self-hosted, label-aws]

    env:
      ECR_REPOSITORY: java-app
      IMAGE_TAG: latest
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests with Maven
      run: mvn test

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-app
        path: target/*.jar

    - name: Run SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn verify sonar:sonar \
          -Dsonar.projectKey=java-app \
          -Dsonar.host.url=http://13.234.114.111:9000 \
          -Dsonar.login=$SONAR_TOKEN

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Tag Docker Image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        sudo mv ./bin/trivy /usr/local/bin/

    - name: Trivy Image Scan (Table Output)
      run: |
        IMAGE=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
        trivy image --exit-code 1 --severity CRITICAL,HIGH --format table $IMAGE

    - name: Trivy JSON Report
      run: |
        IMAGE=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
        trivy image --severity CRITICAL,HIGH --format json -o trivy-report.json $IMAGE

    - name: Upload Trivy JSON Report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json

    - name: Push Docker Image to Amazon ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Output Image URL
      run: echo "Pushed to ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG"